---
- name: install disable-transparent-hugepages init script
  copy:
    src: disable-transparent-hugepages
    dest: /etc/init.d/disable-transparent-hugepages
    owner: root
    group: root
    mode: 0755
  tags:
    - mongodb
    - disable-transparent-hugepages


- name: apply disable-transparent-hugepages
  service:
    name: disable-transparent-hugepages
    enabled: yes
    state: restarted
  tags:
    - mongodb
    - disable-transparent-hugepages


- name: Set OS limits
  pam_limits:
    backup: yes
    dest: /etc/security/limits.conf
    domain: "*"
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.item }}"
    value: "{{ item.value }}"
  with_items:
    - { type: 'soft', item: 'nofile', value: '64000' }
    - { type: 'hard', item: 'nofile', value: '64000' }
    - { type: 'soft', item: 'nproc', value: '32000' }
    - { type: 'soft', item: 'nproc', value: '32000' }
  register: pamlim
  tags: 
    - mongodb


- name: Display all variables/facts known a task
  debug: msg="{{pamlim}}"
  tags:
    - mongodb


- name: Upload the limits.d conf
  copy: 
    src: "90-nproc.conf"
    dest: "/etc/security/limits.d/"
    force: yes
  register: pamlims
  tags:
    - mongodb


- name:  Disable file last time access update
  mount:
    name: /
    src: LABEL=cloudimg-rootfs
    fstype: ext4
    opts: defaults,noatime,discard
    state: mounted
  tags:
    - mongodb


- name: Create mount directory on the remote
  file:
    path: /data
    state: directory
  register: cmd
  tags:
    - mongodb


- name: start mongodb container
  docker_container:
    name: mongo
    image: mongo:{{ mongodb_version }}
    state: started
    pull: true
    restart: yes
    restart_policy: always
    ports:
    - "27017:27017"
    volumes:
    - /data:/data/db
    command: "mongod {{ mongodb_opts }}"
    hostname: "{{ ansible_ssh_host }}"
  tags:
  - mongodb
